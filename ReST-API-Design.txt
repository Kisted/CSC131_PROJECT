The purpose of this document is to allow for potential REST endpoints to be structured and examined.

	Our database has four columns; year, category, winner, entity. To this end, we can define a number of resources based on those values.

	A search endpoint would allow the user of the API to filter by a minimum of one column value or a maximum of three column values at once. 

REST SEARCH ENDPOINT EX

	HOST/search?year=xxxx -> {list of all entities nominated in year xxxx}

	.../search?category='Best Picture'&year=xxxx -> {list of all films nominated for best picture in year xxxx}

	.../search?category='Best Picture'&year=xxxx&winner=true -> {lists the winner of best picture in year xxxx}

Initial ideas...

	/years -> lists all unique years (~100 entries...)

	/categories -> lists all unique categories (~50 entries)

	/winners -> lists all unique winners (~1000 entries)

	/losers -> lists all unique losers (~10,000 entries)
	
Idea URIs using category

	/cat -> returns all nominees for cat (~200 entries)

	/cat/year -> returns all nomineees for cat in year (~10 entries)

	/cat/win -> returns all winners for cat (~100 entries)

	/cat/losers -> returns all losers for cat (~1000 entries)

	/cat/year/win -> returns winner for cat in year (1 entry)

	/cat/year/losers -> returns losers for cat in year (~10 entries)

Idea URIs using year

	/year -> returns all nominees for a year (~100 entries)

	/year/win -> returns all winners in year (~30 entries)

	/year/losers -> returns all losers in a year (~70 entries)